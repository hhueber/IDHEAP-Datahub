version: "3.9"

services:
  db:
    image: postgres:16
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"  # only for dev
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -h ${DB_HOST} -p ${DB_PORT}"]
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    env_file:
      - .env
    # depends_on:
    #   db:
    #     condition: service_healthy   # commenter si depends voulue ou pas entre les service api et db
    ports:
      - "8000:8000" # only for dev
    volumes:
      - ./backend:/app
    restart: "always"
  
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
      args:
        # Pass the backend API URL as a build argument for React
        - REACT_APP_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      # Ensure backend starts before frontend
      - api
    restart: "always"

  schema_db_init:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    command: ["python", "-m", "app.script.init_db_async"]
    volumes:
      - ./backend:/app
    restart: "no"

volumes:
  pgdata:
